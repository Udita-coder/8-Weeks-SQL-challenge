/* Case Study 2 - Pizza Runner*/

/* Creation of Runners Table */

CREATE TABLE runners (
  "runner_id" INTEGER,
  "registration_date" DATE
);

/* Inserting records into Runners table */

INSERT INTO runners
  ("runner_id", "registration_date")
VALUES
  (1, '2021-01-01'),
  (2, '2021-01-03'),
  (3, '2021-01-08'),
  (4, '2021-01-15');

SELECT * FROM runners;

/* Creation of customer_orders table */

CREATE TABLE customer_orders (
  "order_id" INTEGER,
  "customer_id" INTEGER,
  "pizza_id" INTEGER,
  "exclusions" VARCHAR(4),
  "extras" VARCHAR(4),
  "order_time" DATETIME
);

/* Insertion of data into customer_orders table */

INSERT INTO customer_orders
  ("order_id", "customer_id", "pizza_id", "exclusions", "extras", "order_time")
VALUES
  ('1', '101', '1', '', '', '2020-01-01 18:05:02'),
  ('2', '101', '1', '', '', '2020-01-01 19:00:52'),
  ('3', '102', '1', '', '', '2020-01-02 23:51:23'),
  ('3', '102', '2', '', NULL, '2020-01-02 23:51:23'),
  ('4', '103', '1', '4', '', '2020-01-04 13:23:46'),
  ('4', '103', '1', '4', '', '2020-01-04 13:23:46'),
  ('4', '103', '2', '4', '', '2020-01-04 13:23:46'),
  ('5', '104', '1', 'null', '1', '2020-01-08 21:00:29'),
  ('6', '101', '2', 'null', 'null', '2020-01-08 21:03:13'),
  ('7', '105', '2', 'null', '1', '2020-01-08 21:20:29'),
  ('8', '102', '1', 'null', 'null', '2020-01-09 23:54:33'),
  ('9', '103', '1', '4', '1, 5', '2020-01-10 11:22:59'),
  ('10', '104', '1', NULL, NULL, '2020-01-11 18:34:49'),
  ('10', '104', '1', '2, 6', '1, 4', '2020-01-11 18:34:49');

SELECT * FROM customer_orders;

/* Creation of runner_order */

CREATE TABLE runner_orders (
  "order_id" INTEGER,
  "runner_id" INTEGER,
  "pickup_time" VARCHAR(19),
  "distance" VARCHAR(7),
  "duration" VARCHAR(10),
  "cancellation" VARCHAR(23)
);

/* Insertion of data into runner_order table */

INSERT INTO runner_orders
  ("order_id", "runner_id", "pickup_time", "distance", "duration", "cancellation")
VALUES
  ('1', '1', '2020-01-01 18:15:34', '20km', '32 minutes', ''),
  ('2', '1', '2020-01-01 19:10:54', '20km', '27 minutes', ''),
  ('3', '1', '2020-01-03 00:12:37', '13.4km', '20 mins', NULL),
  ('4', '2', '2020-01-04 13:53:03', '23.4', '40', NULL),
  ('5', '3', '2020-01-08 21:10:57', '10', '15', NULL),
  ('6', '3', 'null', 'null', 'null', 'Restaurant Cancellation'),
  ('7', '2', '2020-01-08 21:30:45', '25km', '25mins', 'null'),
  ('8', '2', '2020-01-10 00:15:02', '23.4 km', '15 minute', 'null'),
  ('9', '2', 'null', 'null', 'null', 'Customer Cancellation'),
  ('10', '1', '2020-01-11 18:50:20', '10km', '10minutes', 'null');

SELECT * FROM runner_orders;

/* creation of pizza_names table */

CREATE TABLE pizza_names (
  "pizza_id" INTEGER,
  "pizza_name" TEXT
);

/* Insertion of data into pizza_names table */

INSERT INTO pizza_names
  ("pizza_id", "pizza_name")
VALUES
  (1, 'Meatlovers'),
  (2, 'Vegetarian');

SELECT * FROM pizza_names;

/* Creation of pizza_recipes table */
CREATE TABLE pizza_recipes (
  "pizza_id" INTEGER,
  "toppings" TEXT
);

/* Insertion of data into pizza_recipes table */
INSERT INTO pizza_recipes
  ("pizza_id", "toppings")
VALUES
  (1, '1, 2, 3, 4, 5, 6, 8, 10'),
  (2, '4, 6, 7, 9, 11, 12');

SELECT * FROM pizza_recipes;

/* Creation of pizza_toppings table */
CREATE TABLE pizza_toppings (
  "topping_id" INTEGER,
  "topping_name" TEXT
);

/* Insertion of data into pizza_toppings table */
INSERT INTO pizza_toppings
  ("topping_id", "topping_name")
VALUES
  (1, 'Bacon'),
  (2, 'BBQ Sauce'),
  (3, 'Beef'),
  (4, 'Cheese'),
  (5, 'Chicken'),
  (6, 'Mushrooms'),
  (7, 'Onions'),
  (8, 'Pepperoni'),
  (9, 'Peppers'),
  (10, 'Salami'),
  (11, 'Tomatoes'),
  (12, 'Tomato Sauce');

SELECT * FROM pizza_toppings;
SELECT * FROM pizza_names;
SELECT * FROM pizza_recipes;
SELECT * FROM customer_orders;
SELECT * FROM runner_orders;
SELECT * FROM runners;

/* Data Cleaning (customer_orders) table */
/* Updating datatype of order_time column from VARCHAR to DATETIME in customer_orders table */
ALTER TABLE customer_orders
ALTER COLUMN order_time DATETIME;

/* Updating null and blank values to NULL values in customer_orders table */
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id=1 ;
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id=2 ;
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id=3 ;
UPDATE customer_orders SET extras = NULL WHERE order_id= 4;
UPDATE customer_orders SET exclusions = NULL WHERE order_id= 5;
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id=6 ;
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id= 7;
UPDATE customer_orders SET exclusions = NULL, extras = NULL WHERE order_id= 8;

/* Data cleaning of runner_orders table */
/* Updating null and blank values to NULL values in runner_orders table */
UPDATE runner_orders SET cancellation = NULL WHERE order_id = 1;
UPDATE runner_orders SET cancellation = NULL WHERE order_id = 2;
UPDATE runner_orders SET pickup_time = NULL, distance = NULL, duration = NULL WHERE order_id = 6;
UPDATE runner_orders SET cancellation = NULL WHERE order_id = 7;
UPDATE runner_orders SET cancellation = NULL WHERE order_id = 8;
UPDATE runner_orders SET pickup_time = NULL, distance = NULL, duration = NULL WHERE order_id = 9;
UPDATE runner_orders SET cancellation = NULL WHERE order_id = 10;

/* Cleaning distance column values in runner_orders table */
UPDATE runner_orders SET distance = SUBSTRING(distance,0,3);
SELECT * FROM runner_orders;

/* Updating datatype of distance column from VARCHAR to INTEGER in runner_orders table */
ALTER TABLE runner_orders
ALTER COLUMN distance INTEGER;

/* Changing column name distance to distance(KM) in runner_orders table */

sp_RENAME 'runner_orders.distance' , 'distance (in KM)', 'COLUMN' ;

/* Cleaning duration column values in runner_orders table */
UPDATE runner_orders SET duration = SUBSTRING(duration,0,3);
SELECT * FROM runner_orders;

/* Updating datatype of duration column from VARCHAR to INTEGER in runner_orders table */
ALTER TABLE runner_orders
ALTER COLUMN duration INTEGER;

/* Changing column name duration to duration (in minutes) in runner_orders table */

sp_RENAME 'runner_orders.duration' , 'duration (in minutes)', 'COLUMN' ;
